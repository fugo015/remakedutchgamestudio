webpackHotUpdate("dutchgamestudio",{

/***/ "./packages/mars-theme/src/components/index.js":
/*!*****************************************************!*\
  !*** ./packages/mars-theme/src/components/index.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"./node_modules/core-js/modules/es.symbol.description.js\");\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _frontity_components_switch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @frontity/components/switch */ \"./node_modules/@frontity/components/switch.tsx\");\n/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./header */ \"./packages/mars-theme/src/components/header.js\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./list */ \"./packages/mars-theme/src/components/list/index.js\");\n/* harmony import */ var _post__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./post */ \"./packages/mars-theme/src/components/post.js\");\n/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./loading */ \"./packages/mars-theme/src/components/loading.js\");\n/* harmony import */ var _title__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./title */ \"./packages/mars-theme/src/components/title.js\");\n/* harmony import */ var _page_error__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./page-error */ \"./packages/mars-theme/src/components/page-error.js\");\n/* harmony import */ var _images_start_image_gif__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../images/start_image.gif */ \"./packages/mars-theme/src/images/start_image.gif\");\n/* harmony import */ var _images_game_vr_jpg__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../images/game-vr.jpg */ \"./packages/mars-theme/src/images/game-vr.jpg\");\n/* harmony import */ var _images_engagement_game_jpg__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../images/engagement-game.jpg */ \"./packages/mars-theme/src/images/engagement-game.jpg\");\n/* harmony import */ var _images_entertaiment_game_jpg__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../images/entertaiment-game.jpg */ \"./packages/mars-theme/src/images/entertaiment-game.jpg\");\n/* harmony import */ var _images_serious_game_jpg__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../images/serious-game.jpg */ \"./packages/mars-theme/src/images/serious-game.jpg\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}/**\n * Theme is the root React component of our theme. The one we will export\n * in roots.\n */const Theme=({state})=>{// Get information about the current URL.\nconst data=state.source.get(state.router.link);return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsxs\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"Fragment\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(_title__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsxs\"])(frontity__WEBPACK_IMPORTED_MODULE_2__[\"Head\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"meta\",{name:\"description\",content:state.frontity.description}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"html\",{lang:\"en\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"link\",{rel:\"stylesheet\",href:\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\",integrity:\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\",crossorigin:\"anonymous\"})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(frontity__WEBPACK_IMPORTED_MODULE_2__[\"Global\"],{styles:globalStyles}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(HeadContainer,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(_header__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(StartImage,{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(Box,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsxs\"])(BoxContent,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(BoxTitel,{children:\"Game laten ontwikkelen\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(BoxText,{children:\"Wij bij Dutch Game Studio zijn gespecialiseerd in het ontwikkelen van games. Bekijk hieronder de mogelijkheden.\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(ScrollButton,{href:\"#scroll\"})]})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(FluidContainer,{id:\"scroll\",children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsxs\"])(Row,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(VrImage,{className:\"col-md-6 push-md-6 home__content_block home__block-right home__block-bg\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsxs\"])(VrTextColom,{className:\"col-md-6 pull-md-6 home__content_block home__content_block-content home__content_block-content-right-align\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(VrTitle,{children:\"VR | AR | SIMULATIE GAME\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(VrText,{children:\"Bij een VR game waan je je in een andere virtuele wereld. Een AR game is niet volledig virtueel maar zijn er virtuele elementen die je toe kan voegen aan de bestaande wereld.\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(VrText,{children:\"Door gebruik te maken van een Virtual Reality bril, lijkt het alsof je je in het spel bevindt. Augmented Reality is te gebruiken doormiddel van bijvoorbeeld je smartphone of een speciale AR-bril zoals de Hololens. Daarnaast ontwikkelen wij ook 3D simulatiegames. Simulatiegames worden met name gebuikt om praktijksituaties te oefenen, bijvoorbeeld in de medische wereld en bij Defensie.\"})]})]})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(FluidContainer,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsxs\"])(Row,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(EngagementImage,{className:\"col-md-6 push-md-6 home__content_block home__block-right home__block-bg\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsxs\"])(VrTextColom,{className:\"col-md-6 pull-md-6 home__content_block home__content_block-content home__content_block-content-right-align\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(VrTitle,{children:\"ENGAGEMENT GAME\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(VrText,{children:\"Een engagement game is erop gericht om uw merk/product onder de aandacht te brengen.\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(VrText,{children:\"Uw geeft hiermee uw klant de ultieme Merkbeleving. Laat door middel van een game een blijvende indruk achter bij uw klanten en zorg dat zij uw merk niet meer vergeten.\"})]})]})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(FluidContainer,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsxs\"])(Row,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(EntertainmentImage,{className:\"col-md-6 push-md-6 home__content_block home__block-right home__block-bg\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsxs\"])(VrTextColom,{className:\"col-md-6 pull-md-6 home__content_block home__content_block-content home__content_block-content-right-align\",children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(VrTitle,{children:\"ENGAGEMENT GAME\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(VrText,{children:\"Een engagement game is erop gericht om uw merk/product onder de aandacht te brengen.\"}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(VrText,{children:\"Uw geeft hiermee uw klant de ultieme Merkbeleving. Laat door middel van een game een blijvende indruk achter bij uw klanten en zorg dat zij uw merk niet meer vergeten.\"})]})]})})]});};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(Theme));const globalStyles= false?undefined:{name:\"1q7ziw2-globalStyles\",styles:\"body{margin:0;font-family:-apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",Roboto,\\\"Droid Sans\\\",\\\"Helvetica Neue\\\",Helvetica,Arial,sans-serif;}a,a:visited{color:inherit;text-decoration:none;};label:globalStyles;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};const HeadContainer=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\",{target:\"e1nzqhd615\",label:\"HeadContainer\"})( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");const Box=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\",{target:\"e1nzqhd614\",label:\"Box\"})( false?undefined:{name:\"c0j8f9\",styles:\"position:absolute;bottom:0;content:\\\" \\\";left:0;right:0;z-index:1\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const BoxContent=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\",{target:\"e1nzqhd613\",label:\"BoxContent\"})( false?undefined:{name:\"yn3n70\",styles:\"background:#fff;padding:25px;border-top:5px solid #f1f1f1;text-align:center;margin:0 auto;max-width:600px;animation:card .5s\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const BoxTitel=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"h1\",{target:\"e1nzqhd612\",label:\"BoxTitel\"})( false?undefined:{name:\"o7hcj5\",styles:\"letter-spacing:.12em;font-size:20px;font-weight:600;padding-bottom:15px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const BoxText=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"p\",{target:\"e1nzqhd611\",label:\"BoxText\"})( false?undefined:{name:\"1tt969q\",styles:\"color:#0f0e11;line-height:2em;font-size:16px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const ScrollButton=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"a\",{target:\"e1nzqhd610\",label:\"ScrollButton\"})( false?undefined:{name:\"1q7yn1b\",styles:\"text-align:center;position:relative;padding:7.5px;animation:scaling 1s infinite alternate;-webkit-animation:scaling 1s infinite alternate;transition:all .1s ease-in-out;line-height:0;margin:0 auto;background:#27ae60;display:inline-block;border-radius:3px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const FluidContainer=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\",{target:\"e1nzqhd69\",label:\"FluidContainer\"})( false?undefined:{name:\"qhxz92\",styles:\"max-width:100%\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Row=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\",{target:\"e1nzqhd68\",label:\"Row\"})( false?undefined:{name:\"19tgm8w\",styles:\"display:flex;flex-wrap:wrap;margin-right:-15px;margin-left:-15px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const StartImage=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\",{target:\"e1nzqhd67\",label:\"StartImage\"})(\"background:url(\",_images_start_image_gif__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\");background-size:cover;position:relative;height:100vh;overflow:hidden;\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));{/*vr*/}const VrImage=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\",{target:\"e1nzqhd66\",label:\"VrImage\"})(\"background:url(\",_images_game_vr_jpg__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\") no-repeat;background-size:cover;background-position:center;\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const VrTextColom=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\",{target:\"e1nzqhd65\",label:\"VrTextColom\"})( false?undefined:{name:\"16d87q0\",styles:\"padding:100px 50px;min-height:500px;background:#f5f6f6\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const VrText=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"p\",{target:\"e1nzqhd64\",label:\"VrText\"})( false?undefined:{name:\"1ie3s9b\",styles:\"color:#0f0e11;line-height:1.5em;font-size:17px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const VrTitle=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"h2\",{target:\"e1nzqhd63\",label:\"VrTitle\"})( false?undefined:{name:\"1ij41de\",styles:\"letter-spacing:.12em;font-weight:600;text-transform:uppercase;color:#0f0e11;padding-bottom:15px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});{/*engagement game */}const EngagementImage=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\",{target:\"e1nzqhd62\",label:\"EngagementImage\"})(\"background:url(\",_images_engagement_game_jpg__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\") no-repeat;background-size:cover;background-position:center;\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));{/*entertainment game */}const EntertainmentImage=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\",{target:\"e1nzqhd61\",label:\"EntertainmentImage\"})(\"background:url(\",_images_entertaiment_game_jpg__WEBPACK_IMPORTED_MODULE_13__[\"default\"],\") no-repeat;background-size:cover;background-position:center;\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));const Main=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\",{target:\"e1nzqhd60\",label:\"Main\"})( false?undefined:{name:\"1szd241\",styles:\"display:flex;justify-content:center;background-image:linear-gradient(\\n    180deg,\\n    rgba(66, 174, 228, 0.1),\\n    rgba(66, 174, 228, 0)\\n  )\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/mars-theme/src/components/index.js\n");

/***/ })

})